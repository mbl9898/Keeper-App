{"ast":null,"code":"import _toConsumableArray from\"E:\\\\Web Development\\\\31. React\\\\Keeper App Final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"E:\\\\Web Development\\\\31. React\\\\Keeper App Final\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import Header from\"./Header\";import Footer from\"./Footer\";import Note from\"./Note\";import CreateArea from\"./CreateArea\";import{getNotes,updateNotes}from\"../notesDB\";function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),notes=_useState2[0],setNotes=_useState2[1];useEffect(function(){console.log(\"Fetching Project From Local Storage\");var notesDB=getNotes();if(!notesDB)return;setNotes(function(prevNotes){return _toConsumableArray(notesDB);});},[]);function addNote(newNote){setNotes(function(prevNotes){return[].concat(_toConsumableArray(prevNotes),[newNote]);});updateNotes([].concat(_toConsumableArray(notes),[newNote]));}function deleteNote(id){var updated=_toConsumableArray(notes);var newUpdated=updated.filter(function(noteItem,index){return index!==id;});setNotes(function(prevNotes){return _toConsumableArray(newUpdated);});}return/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(Header,null),/*#__PURE__*/React.createElement(CreateArea,{onAdd:addNote}),notes.map(function(noteItem,index){return/*#__PURE__*/React.createElement(Note,{key:index,id:index,title:noteItem.title,content:noteItem.content,onDelete:deleteNote});}),/*#__PURE__*/React.createElement(Footer,null));}export default App;","map":{"version":3,"sources":["E:/Web Development/31. React/Keeper App Final/src/components/App.jsx"],"names":["React","useState","useEffect","Header","Footer","Note","CreateArea","getNotes","updateNotes","App","notes","setNotes","console","log","notesDB","prevNotes","addNote","newNote","deleteNote","id","updated","newUpdated","filter","noteItem","index","map","title","content"],"mappings":"gWAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,UAAnB,CACA,MAAOC,CAAAA,IAAP,KAAiB,QAAjB,CACA,MAAOC,CAAAA,UAAP,KAAuB,cAAvB,CACA,OAASC,QAAT,CAAmBC,WAAnB,KAAsC,YAAtC,CAEA,QAASC,CAAAA,GAAT,EAAe,eACaR,QAAQ,CAAC,EAAD,CADrB,wCACNS,KADM,eACCC,QADD,eAGbT,SAAS,CAAC,UAAM,CACdU,OAAO,CAACC,GAAR,CAAY,qCAAZ,EACA,GAAMC,CAAAA,OAAO,CAAGP,QAAQ,EAAxB,CACA,GAAI,CAACO,OAAL,CAAc,OACdH,QAAQ,CAAC,SAACI,SAAD,CAAe,CACtB,0BAAWD,OAAX,EACD,CAFO,CAAR,CAGD,CAPQ,CAON,EAPM,CAAT,CASA,QAASE,CAAAA,OAAT,CAAiBC,OAAjB,CAA0B,CACxBN,QAAQ,CAAC,SAACI,SAAD,CAAe,CACtB,mCAAWA,SAAX,GAAsBE,OAAtB,GACD,CAFO,CAAR,CAGAT,WAAW,8BAAKE,KAAL,GAAYO,OAAZ,GAAX,CACD,CAED,QAASC,CAAAA,UAAT,CAAoBC,EAApB,CAAwB,CACtB,GAAMC,CAAAA,OAAO,oBAAOV,KAAP,CAAb,CACA,GAAMW,CAAAA,UAAU,CAAGD,OAAO,CAACE,MAAR,CAAe,SAACC,QAAD,CAAWC,KAAX,CAAqB,CACrD,MAAOA,CAAAA,KAAK,GAAKL,EAAjB,CACD,CAFkB,CAAnB,CAIAR,QAAQ,CAAC,SAACI,SAAD,CAAe,CACtB,0BAAWM,UAAX,EACD,CAFO,CAAR,CAGD,CAED,mBACE,4CACE,oBAAC,MAAD,MADF,cAEE,oBAAC,UAAD,EAAY,KAAK,CAAEL,OAAnB,EAFF,CAGGN,KAAK,CAACe,GAAN,CAAU,SAACF,QAAD,CAAWC,KAAX,CAAqB,CAC9B,mBACE,oBAAC,IAAD,EACE,GAAG,CAAEA,KADP,CAEE,EAAE,CAAEA,KAFN,CAGE,KAAK,CAAED,QAAQ,CAACG,KAHlB,CAIE,OAAO,CAAEH,QAAQ,CAACI,OAJpB,CAKE,QAAQ,CAAET,UALZ,EADF,CASD,CAVA,CAHH,cAcE,oBAAC,MAAD,MAdF,CADF,CAkBD,CAED,cAAeT,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Note from \"./Note\";\nimport CreateArea from \"./CreateArea\";\nimport { getNotes, updateNotes } from \"../notesDB\";\n\nfunction App() {\n  const [notes, setNotes] = useState([]);\n\n  useEffect(() => {\n    console.log(\"Fetching Project From Local Storage\");\n    const notesDB = getNotes();\n    if (!notesDB) return;\n    setNotes((prevNotes) => {\n      return [...notesDB];\n    });\n  }, []);\n\n  function addNote(newNote) {\n    setNotes((prevNotes) => {\n      return [...prevNotes, newNote];\n    });\n    updateNotes([...notes, newNote]);\n  }\n\n  function deleteNote(id) {\n    const updated = [...notes];\n    const newUpdated = updated.filter((noteItem, index) => {\n      return index !== id;\n    });\n\n    setNotes((prevNotes) => {\n      return [...newUpdated];\n    });\n  }\n\n  return (\n    <div>\n      <Header />\n      <CreateArea onAdd={addNote} />\n      {notes.map((noteItem, index) => {\n        return (\n          <Note\n            key={index}\n            id={index}\n            title={noteItem.title}\n            content={noteItem.content}\n            onDelete={deleteNote}\n          />\n        );\n      })}\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}